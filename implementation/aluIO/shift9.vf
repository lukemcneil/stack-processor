////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : shift9.vf
// /___/   /\     Timestamp : 11/14/2020 10:40:41
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath /home/luke/csse232/project/2021a-project-2v/implementation/aluIO/ipcore_dir -sympath /home/luke/csse232/project/2021a-project-2v/implementation/aluIO/remote_sources/_/debounce/ipcore_dir -sympath /home/luke/csse232/project/2021a-project-2v/implementation/aluIO/remote_sources/_/lcdDisplayControl/ipcore_dir -sympath /home/luke/csse232/project/2021a-project-2v/implementation/aluIO/remote_sources/_/rotaryInputHexOpHex/ipcore_dir -intstyle ise -family spartan3e -verilog /home/luke/csse232/project/2021a-project-2v/implementation/aluIO/shift9.vf -w /home/luke/csse232/project/2021a-project-2v/implementation/aluIO/remote_sources/_/rotaryInputHexOpHex/shift9.sch
//Design Name: shift9
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module M2_1_MXILINX_shift9(D0, 
                           D1, 
                           S0, 
                           O);

    input D0;
    input D1;
    input S0;
   output O;
   
   wire M0;
   wire M1;
   
   AND2B1  I_36_7 (.I0(S0), 
                  .I1(D0), 
                  .O(M0));
   OR2  I_36_8 (.I0(M1), 
               .I1(M0), 
               .O(O));
   AND2  I_36_9 (.I0(D1), 
                .I1(S0), 
                .O(M1));
endmodule
`timescale 1ns / 1ps

module shift9(CLK, 
              count, 
              enable, 
              RESET, 
              up, 
              sel0, 
              sel1, 
              sel2, 
              sel3, 
              sel4, 
              sel5, 
              sel6, 
              sel7, 
              sel8);

    input CLK;
    input count;
    input enable;
    input RESET;
    input up;
   output sel0;
   output sel1;
   output sel2;
   output sel3;
   output sel4;
   output sel5;
   output sel6;
   output sel7;
   output sel8;
   
   wire isel0;
   wire isel1;
   wire isel2;
   wire isel3;
   wire isel4;
   wire isel5;
   wire isel6;
   wire isel7;
   wire isel8;
   wire XLXN_30;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_84;
   
   FDCPE #( .INIT(1'b0) ) XLXI_6 (.C(CLK), 
                 .CE(count), 
                 .CLR(XLXN_30), 
                 .D(XLXN_76), 
                 .PRE(RESET), 
                 .Q(isel0));
   FDCPE #( .INIT(1'b0) ) XLXI_13 (.C(CLK), 
                  .CE(count), 
                  .CLR(RESET), 
                  .D(XLXN_77), 
                  .PRE(XLXN_30), 
                  .Q(isel1));
   FDCPE #( .INIT(1'b0) ) XLXI_14 (.C(CLK), 
                  .CE(count), 
                  .CLR(RESET), 
                  .D(XLXN_78), 
                  .PRE(XLXN_30), 
                  .Q(isel2));
   FDCPE #( .INIT(1'b0) ) XLXI_15 (.C(CLK), 
                  .CE(count), 
                  .CLR(RESET), 
                  .D(XLXN_79), 
                  .PRE(XLXN_30), 
                  .Q(isel3));
   FDCPE #( .INIT(1'b0) ) XLXI_16 (.C(CLK), 
                  .CE(count), 
                  .CLR(RESET), 
                  .D(XLXN_80), 
                  .PRE(XLXN_30), 
                  .Q(isel4));
   FDCPE #( .INIT(1'b0) ) XLXI_17 (.C(CLK), 
                  .CE(count), 
                  .CLR(RESET), 
                  .D(XLXN_81), 
                  .PRE(XLXN_30), 
                  .Q(isel5));
   FDCPE #( .INIT(1'b0) ) XLXI_18 (.C(CLK), 
                  .CE(count), 
                  .CLR(RESET), 
                  .D(XLXN_82), 
                  .PRE(XLXN_30), 
                  .Q(isel6));
   FDCPE #( .INIT(1'b0) ) XLXI_19 (.C(CLK), 
                  .CE(count), 
                  .CLR(RESET), 
                  .D(XLXN_83), 
                  .PRE(XLXN_30), 
                  .Q(isel7));
   FDCPE #( .INIT(1'b0) ) XLXI_20 (.C(CLK), 
                  .CE(count), 
                  .CLR(RESET), 
                  .D(XLXN_84), 
                  .PRE(XLXN_30), 
                  .Q(isel8));
   (* HU_SET = "XLXI_21_50" *) 
   M2_1_MXILINX_shift9  XLXI_21 (.D0(isel1), 
                                .D1(isel8), 
                                .S0(up), 
                                .O(XLXN_76));
   GND  XLXI_53 (.G(XLXN_30));
   (* HU_SET = "XLXI_56_42" *) 
   M2_1_MXILINX_shift9  XLXI_56 (.D0(isel2), 
                                .D1(isel0), 
                                .S0(up), 
                                .O(XLXN_77));
   (* HU_SET = "XLXI_57_43" *) 
   M2_1_MXILINX_shift9  XLXI_57 (.D0(isel3), 
                                .D1(isel1), 
                                .S0(up), 
                                .O(XLXN_78));
   (* HU_SET = "XLXI_58_49" *) 
   M2_1_MXILINX_shift9  XLXI_58 (.D0(isel4), 
                                .D1(isel2), 
                                .S0(up), 
                                .O(XLXN_79));
   (* HU_SET = "XLXI_59_48" *) 
   M2_1_MXILINX_shift9  XLXI_59 (.D0(isel5), 
                                .D1(isel3), 
                                .S0(up), 
                                .O(XLXN_80));
   (* HU_SET = "XLXI_60_44" *) 
   M2_1_MXILINX_shift9  XLXI_60 (.D0(isel6), 
                                .D1(isel4), 
                                .S0(up), 
                                .O(XLXN_81));
   (* HU_SET = "XLXI_61_47" *) 
   M2_1_MXILINX_shift9  XLXI_61 (.D0(isel7), 
                                .D1(isel5), 
                                .S0(up), 
                                .O(XLXN_82));
   (* HU_SET = "XLXI_62_45" *) 
   M2_1_MXILINX_shift9  XLXI_62 (.D0(isel8), 
                                .D1(isel6), 
                                .S0(up), 
                                .O(XLXN_83));
   (* HU_SET = "XLXI_63_46" *) 
   M2_1_MXILINX_shift9  XLXI_63 (.D0(isel0), 
                                .D1(isel7), 
                                .S0(up), 
                                .O(XLXN_84));
   AND2  XLXI_64 (.I0(isel0), 
                 .I1(enable), 
                 .O(sel0));
   AND2  XLXI_65 (.I0(isel1), 
                 .I1(enable), 
                 .O(sel1));
   AND2  XLXI_66 (.I0(isel2), 
                 .I1(enable), 
                 .O(sel2));
   AND2  XLXI_67 (.I0(isel3), 
                 .I1(enable), 
                 .O(sel3));
   AND2  XLXI_68 (.I0(isel4), 
                 .I1(enable), 
                 .O(sel4));
   AND2  XLXI_69 (.I0(isel5), 
                 .I1(enable), 
                 .O(sel5));
   AND2  XLXI_70 (.I0(isel6), 
                 .I1(enable), 
                 .O(sel6));
   AND2  XLXI_71 (.I0(isel7), 
                 .I1(enable), 
                 .O(sel7));
   AND2  XLXI_72 (.I0(isel8), 
                 .I1(enable), 
                 .O(sel8));
endmodule
